# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8, FontAwesome 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Set background
exec_always feh --bg-scale ~/Pictures

# Run polybar
#exec_always --no-startup-id ~/.config/polybar/launch.sh

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
# bindsym $mod+j focus left
# bindsym $mod+k focus down
# bindsym $mod+l focus up
# bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define workspaces
set $ws1	10:
set $ws2	11:
set $ws3	12:
set $ws4	13:4
set $ws5	14:
set $ws6	15:
set $ws7	16:
set $ws8	17:
set $ws9	18:9
set $ws0	19:
set $ws10	20:
set $ws11	21:11
set $ws12	22:12
set $ws13	23:
set $ws14	24:
set $ws15	25:
set $ws16	26:16
set $ws17	27:17
set $ws18	28:
set $ws19	29:

# Define Monitors
set $left_monitor "Virtual2"
set $mid_monitor "Virtual1"
set $right_monitor "Virtual3"

# Bind workspace to monitors
workspace $ws1	output $mid_monitor
workspace $ws2	output $mid_monitor
workspace $ws3	output $mid_monitor
workspace $ws4	output $right_monitor
workspace $ws5	output $mid_monitor
workspace $ws6	output $left_monitor
workspace $ws7	output $left_monitor
workspace $ws8	output $right_monitor
workspace $ws9	output $right_monitor
workspace $ws10	output $right_monitor
workspace $ws11	output $right_monitor
workspace $ws12	output $right_monitor
workspace $ws13	output $right_monitor
workspace $ws14	output $right_monitor
workspace $ws15	output $right_monitor
workspace $ws16	output $right_monitor
workspace $ws17	output $right_monitor
workspace $ws18	output $right_monitor
workspace $ws19	output $right_monitor

# switch to workspace
bindsym $mod+1		workspace $ws1
bindsym $mod+2		workspace $ws2
bindsym $mod+3		workspace $ws3
bindsym $mod+4		workspace $ws4
bindsym $mod+5		workspace $ws5
bindsym $mod+6		workspace $ws6
bindsym $mod+7		workspace $ws7
bindsym $mod+8		workspace $ws8
bindsym $mod+9		workspace $ws9
bindsym $mod+0		workspace $ws0
bindsym $mod+Escape	workspace $ws10
bindsym $mod+F1		workspace $ws11
bindsym $mod+F2		workspace $ws12
bindsym $mod+F3		workspace $ws13
bindsym $mod+F4		workspace $ws14
bindsym $mod+F5		workspace $ws15
bindsym $mod+F6		workspace $ws16
bindsym $mod+F7		workspace $ws17
bindsym $mod+F8		workspace $ws18
bindsym $mod+F9		workspace $ws19


# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws0
bindsym $mod+Shift+Escape move container to workspace $ws10
bindsym $mod+Shift+F1 move container to workspace $ws11
bindsym $mod+Shift+F2 move container to workspace $ws12
bindsym $mod+Shift+F3 move container to workspace $ws13
bindsym $mod+Shift+F4 move container to workspace $ws14
bindsym $mod+Shift+F5 move container to workspace $ws15
bindsym $mod+Shift+F6 move container to workspace $ws16
bindsym $mod+Shift+F7 move container to workspace $ws17
bindsym $mod+Shift+F8 move container to workspace $ws18
bindsym $mod+Shift+F9 move container to workspace $ws19

# Move workspaces between monitors
bindsym $mod+Control+Shift+Left move workspace to output left
bindsym $mod+Control+Shift+Right move workspace to output right

# Assign applications to workspaces
# find out class using `xprop | grep -i 'class'`
assign [class="Firefox"]				$ws8
assign [class="Navigator"]				$ws8
assign [class="zoom"]					$ws6
assign [title="WhatsApp - Mozilla Firefox"]		$ws18
assign [class="Gnome-terminal"]				$ws2
assign [class="Spotify"]				$ws19
assign [class="Code"]					$ws5
assign [class="jetbrains-.*"]				$ws5
assign [class="jetbrains-.*" title="Version.*"]		$ws7
assign [class="jetbrains-.*" title="Commit.*"]		$ws7
assign [class="jetbrains-.*" title="Terminal.*"]	$ws6
assign [class="jetbrains-.*" title="Python Console.*"]	$ws6
assign [class="jetbrains-.*" title="Debug.*"]		$ws6
assign [class="Gedit"]					$ws3
assign [class="Typora"]					$ws3
assign [class="Nautilus"]				$ws1
assign [class=".*-monitor"]				$ws0
# Display/Resolution Settings
assign [class="Arandr"]					$ws15
# Pdf
assign [class="Evince"]					$ws13
assign [class="lyx"]					$ws14

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+s exec "systemctl suspend"


# resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        #bindsym j resize shrink width 10 px or 10 ppt
        #bindsym k resize grow height 10 px or 10 ppt
        #bindsym l resize shrink height 10 px or 10 ppt
        #bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt


	bindsym Shift+Left	resize shrink	width	50 px or 50 ppt
	bindsym Shift+Right	resize grow	width	50 px or 50 ppt
	bindsym Shift+Up	resize shrink	height	50 px or 50 ppt
	bindsym Shift+Down	resize grow	height	50 px or 50 ppt


        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# move floating windows with keys
bindsym $mod+m mode "move" focus floating
mode "move" {
    bindsym $mod+Tab focus right

    bindsym Left  move left
    bindsym Down  move down
    bindsym Up    move up
    bindsym Right move right

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}



####   GAPS and Window

#for_window [class="^.*"] border pixel 6
#gaps inner 20
#gaps inner 10

#new_window pixel 3
#new_float pixel 3

#hide_edge_borders vertical

# Color variables
#set $unfocused_border $base05
#set $focused_border #82ff80

#               		class	border  backgr. text indicator
#client.focused          	$base05 $base05 $base00 $base05
#client.focused_inactive 	$base03 $base03 $base05 $base03
#client.unfocused        	$base03 $base03 $base05 $base00
#client.urgent 		 	$base01 $base01 $base05 $base00

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
        tray_output primary
	strip_workspace_numbers yes
}

# To make drag-n-drop and copy-paste work with vmware
exec vmware-user-suid-wrapper

# Make terminal line prefix sensible
exec export PS1="\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\n\$ "

# Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl list short sinks | grep RUNNING | cut -f1 | xargs -n2 sh -c 'pactl set-sink-volume $1 +5%' sh # increase sound vo
bindsym XF86AudioLowerVolume exec --no-startup-id pactl list short sinks | grep RUNNING | cut -f1 | xargs -n2 sh -c 'pactl set-sink-volume $1 -5%' sh #increase sound vo
bindsym XF86AudioMute exec --no-startup-id pactl list short sinks | grep RUNNING | cut -f1 | xargs -n2 sh -c 'pactl set-sink-mute $1 toggle' sh # mute sound
bindsym XF86AudioPlay exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause
bindsym XF86AudioNext exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next
bindsym XF86AudioPrev exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous

# Flameshort (Screenshot)
bindsym Print exec flameshot gui

# Startup programs
exec firefox
exec nautilus
exec code
exec i3-sensible-terminal
exec sudo i3-sensible-terminal
exec sudo pycharm-community
#exec nautilus
exec ~/.screenlayout/DualMonitorTechnion.sh
exec sudo gnome-system-monitor
exec google-drive-ocamlfuse -label Storage ~/GDriveStorage 
exec parcellite

# Keyboard layouts
exec_always "setxkbmap -layout us,il"
exec_always "setxkbmap -option 'grp:sclk_toggle'"
exec_always "setxkbmap -option 'grp:shift_caps_toggle'"
exec_always "setxkbmap -option 'grp_led:caps'"


# Hard links to utils repo
exec_always "rm ~/.config/i3/config && ln -s ~/Documents/git/utils/i3-configs/config ~/.config/i3/config"
exec_always "rm ~/.zshrc && ln -s ~/Documents/git/utils/dotfiles/.zshrc ~/.zshrc"
